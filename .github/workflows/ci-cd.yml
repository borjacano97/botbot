name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Ejecutar el pipeline cuando haya un push a la rama master

jobs:
  build:
    runs-on: self-hosted  # Usar el runner local

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t discord-bot .
          docker save discord-bot | gzip > /tmp/discord-bot.tar.gz

      - name: Deploy Locally
        run: |
          cd ~/projects/botbot
          
          # Asegurarse de que el repositorio está actualizado
          git reset --hard
          git pull origin master
          
          # Extraer la imagen Docker
          docker load < /tmp/discord-bot.tar.gz
          
          # Actualizar servicios con Docker Compose
          docker-compose down || true

          # Registrar docker-compose como un daemon
          nohup docker-compose up --build -d &

          # Crear un servicio systemd para arrancar automáticamente al iniciar el sistema
          sudo bash -c 'cat > /etc/systemd/system/botbot.service <<EOF
          [Unit]
          Description=BotBot Docker Compose Service
          After=docker.service
          Requires=docker.service

          [Service]
          Restart=always
          WorkingDirectory=/home/$(whoami)/projects/botbot
          ExecStart=/usr/local/bin/docker-compose up --build
          ExecStop=/usr/local/bin/docker-compose down

          [Install]
          WantedBy=multi-user.target
          EOF'

          # Recargar systemd y habilitar el servicio
          sudo systemctl daemon-reload
          sudo systemctl enable botbot.service
          sudo systemctl start botbot.service
